package luxk.jdbt.mockjdbc;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;

public class MockStatement implements Statement {

	public boolean isWrapperFor(Class<?> iface) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public <T> T unwrap(Class<T> iface) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public void addBatch(String arg0) throws SQLException {}
	public void cancel() throws SQLException {}
	public void clearBatch() throws SQLException {}
	public void clearWarnings() throws SQLException {}
	public void close() throws SQLException {}
	public void closeOnCompletion() throws SQLException {}

	public boolean execute(String arg0) throws SQLException {
		return true;
	}

	public boolean execute(String arg0, int arg1) throws SQLException {
		return true;
	}

	public boolean execute(String arg0, int[] arg1) throws SQLException {
		return true;
	}

	public boolean execute(String arg0, String[] arg1) throws SQLException {
		return true;
	}

	public int[] executeBatch() throws SQLException {
		return new int[] {10, 10, 10, 10};
	}

	public ResultSet executeQuery(String arg0) throws SQLException {
		return new MockResultSet();
	}

	public int executeUpdate(String sql) throws SQLException {
		return 10;
	}

	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
		return 11;
	}

	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
		return 12;
	}

	public int executeUpdate(String sql, String[] columnNames) throws SQLException {
		return 13;
	}

	public Connection getConnection() throws SQLException {
		return new MockConnection();
	}

	public int getFetchDirection() throws SQLException {
		return 0;
	}

	public int getFetchSize() throws SQLException {
		return 0;
	}

	public ResultSet getGeneratedKeys() throws SQLException {
		return new MockResultSet();
	}

	public int getMaxFieldSize() throws SQLException {
		return 0;
	}

	public int getMaxRows() throws SQLException {
		return 0;
	}

	public boolean getMoreResults() throws SQLException {
		return true;
	}

	public boolean getMoreResults(int current) throws SQLException {
		return true;
	}

	public int getQueryTimeout() throws SQLException {
		return 100;
	}

	public ResultSet getResultSet() throws SQLException {
		return new MockResultSet();
	}

	public int getResultSetConcurrency() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	public int getResultSetHoldability() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	public int getResultSetType() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	public int getUpdateCount() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	public SQLWarning getWarnings() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean isCloseOnCompletion() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean isClosed() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean isPoolable() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public void setCursorName(String name) throws SQLException {}
	public void setEscapeProcessing(boolean enable) throws SQLException {}
	public void setFetchDirection(int direction) throws SQLException {}
	public void setFetchSize(int rows) throws SQLException {}
	public void setMaxFieldSize(int max) throws SQLException {}
	public void setMaxRows(int max) throws SQLException {}
	public void setPoolable(boolean poolable) throws SQLException {}
	public void setQueryTimeout(int seconds) throws SQLException {}

}
